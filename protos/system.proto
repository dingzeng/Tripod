syntax = "proto3";
option csharp_namespace = "Tripod.Service.System";
package System;
import "common.proto";
import "system_dtos.proto";

service SystemSrv {
    // Menu
    rpc GetMenus(GetMenusRequest) returns (GetMenusResponse);

    // Permission
    rpc GetAllPermissions(Empty) returns (PermissionsResponse);

    // Role
    rpc GetAllRoles(Empty) returns (RolesResponse);
    rpc GetRoleById(KeyObject) returns (RoleDTO);
    rpc CreateRole(RoleDTO) returns (RoleDTO);
    rpc DeleteRoleById(KeyObject) returns (BooleanObject);
    rpc UpdateRole(RoleDTO) returns (BooleanObject);
    rpc GetRolePermissions(KeyObject) returns (PermissionsResponse);
    rpc UpdateRolePermissions(UpdateRolePermissionsRequest) returns (BooleanObject);
    rpc SetRolePermission(SetRolePermissionRequest) returns (BooleanObject);
    rpc GetRolePermissionsFlag(KeyObject) returns (GetRolePermissionsFlagResponse);

    // User
    rpc GetUserByUsername(GetUserByUsernameRequest) returns (UserDTO);
    rpc GetUsers(PagingRequest) returns (GetUsersResponse);
    rpc GetUserById(KeyObject) returns (UserDTO);
    rpc CreateUser(UserDTO) returns (UserDTO);
    rpc UpdateUser(UserDTO) returns (BooleanObject);
    rpc UpdateUserRoles(UpdateUserRolesRequest) returns (BooleanObject);
    rpc DeleteUserById(KeyObject) returns(BooleanObject);
    rpc GetRolesByUserId(KeyObject) returns(RolesResponse);
    rpc GetUserMenus(KeyObject) returns(MenuTree);
    rpc GetUserPermissions(KeyObject) returns(PermissionsResponse);
}

message UpdateUserRolesRequest {
    int32 UserId = 1;
    repeated int32 Roles = 2;
}

message MenuTree {
    repeated MenuNode Nodes = 1;
}

message MenuNode {
    string Code = 1;
    string ParentCode = 2;
    string Path = 3;
    string Name = 4;
    int32 IsLeaf = 5;
    string Icon = 6;
    repeated MenuNode Children = 7;
}

message GetMenusRequest {
    string ParentCode = 1;
}

message GetMenusResponse {
    repeated MenuDTO Menus = 1;
}

message PermissionsResponse {
    repeated PermissionDTO Permissions = 1;
}

message RolesResponse {
    repeated RoleDTO Roles = 1;
}

message UpdateRolePermissionsRequest {
    int32 RoleId = 1;
    repeated string PermissionCodes = 2;
}

message SetRolePermissionRequest {
    int32 RoleId = 1;
    string PermissionCode = 2;
    bool Has = 3;
}

message RolePermissionFlag {
    string MenuCode = 1;
    string PermissionCode = 2;
    string PermissionName = 3;
    bool Flag = 4;
}

message GetRolePermissionsFlagResponse {
    repeated RolePermissionFlag Flags = 1;
}

// User
message GetUserByUsernameRequest {
    string Username = 1;
}

message GetUsersResponse {
    int32 TotalCount = 1;
    repeated UserDTO Users = 2;
}