syntax = "proto3";
option csharp_namespace = "Tripod.Service.System";
package System;
import "common.proto";
import "system.dtos.proto";

service SystemSrv {
    // Menu
    rpc GetAllMenus(Empty) returns (GetAllMenusResponse);

    // Permission
    rpc GetAllPermissions(Empty) returns (GetAllPermissionsResponse);

    // PermissionApi
    rpc GetAllPermissionApis(Empty) returns (GetAllPermissionApisResponse);

    // Role
    rpc GetAllRoles(Empty) returns (GetAllRolesResponse);
    rpc GetRoleById(KeyObject) returns (RoleDTO);
    rpc CreateRole(RoleDTO) returns (RoleDTO);
    rpc DeleteRoleById(KeyObject) returns (BooleanObject);
    rpc UpdateRole(RoleDTO) returns (BooleanObject);
    rpc GetRolePermissions(KeyObject) returns (GetRolePermissionsResponse);
    rpc UpdateRolePermissions(UpdateRolePermissionsRequest) returns (BooleanObject);

    // User
    rpc GetUserByUsername(GetUserByUsernameRequest) returns (UserDTO);
    rpc GetUsers(PagingRequest) returns (GetUsersResponse);
    rpc GetUserById(KeyObject) returns (UserDTO);
    rpc CreateUser(UserDTO) returns (UserDTO);
    rpc UpdateUSer(UserDTO) returns (BooleanObject);
    rpc DeleteUserById(KeyObject) returns(BooleanObject);
}

message GetAllMenusResponse {
    repeated MenuDTO Menus = 1;
}

message GetAllPermissionsResponse {
    repeated PermissionDTO Permissions = 1;
}

message GetAllPermissionApisResponse {
    repeated PermissionApiDTO PermissionApis = 1;
}

message GetAllRolesResponse {
    repeated RoleDTO Roles = 1;
}

message GetRolePermissionsResponse {
    repeated PermissionDTO Permissions = 1;
}

message UpdateRolePermissionsRequest {
    int32 RoleId = 1;
    repeated string PermissionCodes = 2;
}

// User
message GetUserByUsernameRequest {
    string Username = 1;
}

message GetUsersResponse {
    int32 TotalCount = 1;
    repeated UserDTO Users = 2;
}